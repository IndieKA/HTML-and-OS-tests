/**
    Chrome OS - by Indie
    
    Some concepts from Kestrel1985
    Some concepts from BJTHEDEV
    
    Created ?
**/
/* --- Button Variables --- */
var gameState = "Menu";
var overButton;
var v = color(194, 194, 194);
var vb = color(255, 255, 255);
var drawButton = function(buttonText, x, y, length, color, buttonHeight) {
    var val = v;
    overButton = false;
    noStroke();
    fill(0, 0, 0, 100);
    rect(x - 2, y + 2, length, buttonHeight + 1, 3);
    if (mouseX >= x && mouseX <= x + length && mouseY >= y && mouseY <= y + buttonHeight) {
        val = vb;
        overButton = true;
    }
    strokeWeight(3);
    stroke(0, 0, 0);
    fill(val);
    rect(x, y, length, buttonHeight, 2);
    textAlign(CENTER, CENTER);
    fill(0, 0, 0);
    textSize(30);
    text(buttonText, x + length / 2, y + buttonHeight / 2);
};
var buttonPressed = false;

/* --- Program Variables --- */
var lightColor = false;
var darkColor = true;
var light = function() {
    fill(255);
};
var dark = function() {
    fill(0);
};
var fontColor = function() {
    if (lightColor === true) {
        light();
    }
    if (darkColor === true) {
        dark();
    }
};
var blockClicked = false;
var close = false;
var minimize = false;
var windowSize = false;
var arrowMenuClicked = false;
var maxNumber = 6;
var currentText = "---";
var txt1Show = false;
var txt2Show = false;
var txt3Show = false;
var txt4Show = false;
var txt5Show = false;
var internetClicked = false;
var calculatorClicked = false;
var block = function(x, y, w, h) {
    strokeWeight(1);
    stroke(0);
    fill(255);
    rect(x, y, w, h);
    noStroke();
    fill(200);
    rect(x + 2, y + 2, w - 2, h - 2);
};
var inBlock = function(x, y, w, h) {
    strokeWeight(1);
    stroke(0, 0, 0);
    fill(255);
    rect(x, y, w, h);
    noStroke();
    fill(255);
    rect(x + 1, y + 1, w, h);
    fill(200);
    rect(x + 1, y + 1, w - 1, h - 1);
};
var lineBlock = function(x, y, h) {
    stroke(255);
    line(x + 1, y, x + 1, h);
    stroke(0);
    line(x, y, x, h);
};
var blockClick = function(x, y, w, h) {
    // The block
    noStroke();
    // Click
    if (mouseX > x && mouseX < x + w && mouseY > y && mouseY < y + h) {
        fill(150, 150, 150, 50);
        if (mouseIsPressed) {
            blockClicked = true;
        }
    } else {
        noFill();
        blockClicked = false;
    }
    rect(x, y, w, h);
};
var saveBlock = function(x, y, w, h, txt) {
    // The block
    strokeWeight(1);
    lineBlock(x + w + 1, y + 2.5, y + h - 2.5);
    // Click
    if (mouseIsPressed && mouseX > x && mouseX < x + w && mouseY > y && mouseY < y + h) {
        blockClicked = true;
        noStroke();
        fill(0, 0, 255);
        rect(x, y, w + 1, h);
        fill(255);
        textSize(10);
        text(txt, x + 5, y + 12);
    } else {
        blockClicked = false;
        fill(0);
        textSize(10);
        text(txt, x + 5, y + 12);
    }
};
var textBlock = function(x, y, w, h, txt) {
    blockClick(x, y, w, h);
    if (mouseX > x && mouseX < x + w && mouseY > y && mouseY < y + h && mouseIsPressed) {
        fill(0);
        textSize(10);
        text(txt, x + 12.5, y + 15);
    } else {
        fill(0);
        textSize(10);
        text(txt, x + 12.5, y + 14);
    }
};
var subBlock = function(x, y, w, h) {
    if (mouseX > x && mouseX < x + w && mouseY > y && mouseY < y + h) {
        fill(0, 0, 255);
    } else {
        fill(255);
    }
    noStroke();
    rect(x + 1, y + 1, w - 1, h - 1);
    strokeWeight(1);
    stroke(0);
    rect(x + 5, y + h, w - 10, 0);
};
var windowText = "---"; // Window name
var window = function(x, y, w, h, txt) {
    noStroke();
    fill(0, 0, 0, 50);
    rect(x - 2, y - 2, w, h);
    rect(x + 2, y + 2, w, h);

    fill(255);
    rect(x, y, w, h);
    fill(230);
    rect(x, y, w, 20);
    // Window title
    fill(255);
    textSize(10);
    text(windowText, x + 50, y + 15);
    // The exit button
    blockClick(x + 7.5, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("x", x + 10, y + 15);
    if (mouseX > x + 7.5 && mouseX < x + 17.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        close = true;
    } else {
        close = false;
    }
    // The minimize button
    blockClick(x + 21, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("-", x + 23, y + 15);
    if (mouseX > x + 21 && mouseX < x + 31.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        minimize = true;
    } else {
        minimize = false;
    }
    // The window size button
    blockClick(x + 34, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    strokeWeight(1);
    stroke(0);
    fill(200);
    rect(x + 35, y + 9, 5, 5);
    rect(x + 37, y + 11, 5, 5);
    if (mouseX > x + 21 && mouseX < x + 31.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        windowSize = true;
    } else {
        windowSize = false;
    }
}; // Ordinary window
var windowBlank = function(x, y, w, h, txt) {
    windowText = txt; // Name
    // The window
    strokeWeight(1);
    stroke(0);
    fill(255);
    rect(x, y, w, h);
    noStroke();
    fill(200);
    rect(x + 2, y + 2, w - 2, h - 2);
    fill(0, 0, 150);
    rect(x + 5, y + 5, w - 10, 17.5);
    // Window title
    fill(255);
    textSize(10);
    text(windowText, x + 50, y + 15);
    // The exit button
    blockClick(x + 7.5, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("x", x + 10, y + 15);
    if (mouseX > x + 7.5 && mouseX < x + 17.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        close = true;
    } else {
        close = false;
    }
    // The minimize button
    blockClick(x + 21, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("-", x + 23, y + 15);
    if (mouseX > x + 21 && mouseX < x + 31.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        minimize = true;
    } else {
        minimize = false;
    }
    // The window size button
    blockClick(x + 34, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    strokeWeight(1);
    stroke(0);
    fill(200);
    rect(x + 35, y + 9, 5, 5);
    rect(x + 37, y + 11, 5, 5);
    if (mouseX > x + 21 && mouseX < x + 31.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        windowSize = true;
    } else {
        windowSize = false;
    }
}; // Blank window
var windowSave = function(x, y, w, h, txt) {
    windowText = txt; // Name
    // The window
    strokeWeight(1);
    stroke(0);
    fill(255);
    rect(x, y, w, h);
    noStroke();
    fill(200);
    rect(x + 2, y + 2, w - 2, h - 2);
    fill(0, 0, 150);
    rect(x + 5, y + 5, w - 10, 17.5);
    inBlock(x + 7.5, y + 45, w - 17.5, h - 52.5);
    fill(255);
    rect(x + 9, y + 46, w - 19, h - 54);
    // Window title
    fill(255);
    textSize(10);
    text(windowText, x + 50, y + 15);
    // The exit button
    blockClick(x + 7.5, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("x", x + 10, y + 15);
    if (mouseX > x + 7.5 && mouseX < x + 17.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        close = true;
    } else {
        close = false;
    }
    // The minimize button
    blockClick(x + 21, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("-", x + 23, y + 15);
    if (mouseX > x + 21 && mouseX < x + 31.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        minimize = true;
    } else {
        minimize = false;
    }
    // The window size button
    blockClick(x + 34, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    strokeWeight(1);
    stroke(0);
    fill(200);
    rect(x + 35, y + 9, 5, 5);
    rect(x + 37, y + 11, 5, 5);
    if (mouseX > x + 21 && mouseX < x + 31.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        windowSize = true;
    } else {
        windowSize = false;
    }
    saveBlock(x + 7.5, y + 25, 35, 17.5, "File"); // File button
    saveBlock(x + 47.5, y + 25, 35, 17.5, "Edit"); // Edit button
    saveBlock(x + 87.5, y + 25, 35, 17.5, "Save"); // Save Button
    saveBlock(x + 127.5, y + 25, 35, 17.5, "Help"); // Help Button
}; // Window with save, edit, help, and ect.
var windowClear = function(x, y, w, h, txt) {
    windowText = txt;
    strokeWeight(1);
    stroke(0);
    noFill();
    rect(x, y, w, h);
    stroke(200);
    rect(x + 1, y + h - 10, w, h);
    rect(x + w - 10, y, 10, h);
    stroke(0);
    rect(x + 10, y, w, h);
    noStroke();
    fill(255);
    rect(x + 1, y + 1, w, 30);
    rect(x + 1, y + 1, 7.5, h);
    rect(x + w - 9, y + 1, 7.5, h);
    rect(x + 1, y + h - 9, w, 10);
    rect(x + 1, y + h - 9, w, 10);
    fill(200);
    rect(x + 2, y + 2, w - 2, 30 - 2);
    rect(x + 2, y + 2, 7.5, h - 2);
    rect(x + w - 8, y + 2, 7.5, h - 2);
    rect(x + 2, y + h - 8, w, 9);
    stroke(0);
    rect(x + 10, y + 30, w - 20, 0);
    noStroke();
    fill(0, 0, 150);
    rect(x + 5, y + 5, w - 10, 17.5);
    textSize(10);
    fill(255);
    text("" + windowText + "", x + 40, y + 15);
    blockClick(x + 7.5, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("x", x + 10, y + 15);
    if (mouseX > x + 7.5 && mouseX < x + 17.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        close = true;
    } else {
        close = false;
    }
    blockClick(x + 21, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("-", x + 23, y + 15);
    if (mouseX > x + 21 && mouseX < x + 31.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        minimize = true;
    } else {
        minimize = false;
    }

}; // A window capable of holding games.
var loadTime = 10;
var x = 0,
    text1 = 0,
    xspeed = 3,
    tspeed = 1;
var userMode = "Guest"; // Unchangeable right now.
var mouseIsClicked = false;
var keyIsClicked = false;
var mT, kT;
var keys = [];
var lowercaseLetters = "abcdefghijklmnopqrstuvwxyz";
var uppercaseLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
var paperWidth = 0;
var paperHeight = 0;
var shiftPressed = false;
var textAllow = false;
var special_chars = {
    10: "\n",
    32: " ",
    48: '0',
    49: '1',
    50: '2',
    51: '3',
    52: '4',
    53: '5',
    54: '6',
    55: '7',
    56: '8',
    57: '9',
    186: ';',
    187: '=',
    188: ',',
    189: '-',
    190: '.',
    191: '/',
    220: '\\',
    222: "'"
};
var special_chars_shift = {
    48: ')',
    49: '!',
    50: '@',
    51: '£',
    52: '$',
    53: '%',
    54: '^',
    55: '&',
    56: '*',
    57: '(',
    186: ':',
    187: '+',
    188: '<',
    189: '_',
    190: '>',
    191: '?',
    220: '|',
    222: '"'
};
var words = "";
var wordsSave = "";
var blinkingCursor = function(x, y) {
    if (frameCount % 25 > 12) {
        strokeWeight(1);
        stroke(0);
        var w = textWidth(words);
        var pw = 300 - 25 * 2;
        var lineX = x + 3 + w % pw;
        var lineY = y - 3 + floor(w / pw) * 12;
        line(lineX, lineY, lineX, lineY + 10);
    }
};
keyPressed = function() {
    keys[keyCode] = true;

    //println(keyCode);

    if (keyCode > 64 && keyCode < 91 && textAllow === true) {
        if (shiftPressed) {
            words += uppercaseLetters[keyCode - 65];
        } else {
            words += lowercaseLetters[keyCode - 65];
        }
    } else if (keyCode in special_chars && textAllow === true) {
        if (shiftPressed && special_chars_shift[keyCode]) {
            words += special_chars_shift[keyCode];
        } else {
            words += special_chars[keyCode];
        }
    } else if (keyCode === BACKSPACE && textAllow === true) {
        words = words.slice(0, words.length - 1);
    } else if (keyCode === 16) {
        shiftPressed = true;
    }
};
keyReleased = function() {
    keys[keyCode] = false;

    if (keyCode === 16 && textAllow === true) {
        shiftPressed = false;
    }
};
var currentNumber = 0;
var showNumber = false;
var calculatorButton = function(x, y, w, h, num) {
    blockClick(x, y, w, h);
    if (mouseX > x && mouseX < x + w && mouseY > y && mouseY < y + h && mouseIsPressed) {
        fill(0, 0, 255);
        textSize(10);
        text(num, x + 12.5, y + 15);
        currentNumber = num;
    } else {
        fill(0, 0, 255);
        textSize(10);
        text(num, x + 12.5, y + 14);
    }
};
var calculatorBlock = function(x, y, w, h, txt) {
    blockClick(x, y, w, h);
    if (mouseX > x && mouseX < x + w && mouseY > y && mouseY < y + h && mouseIsPressed) {
        fill(255, 0, 0);
        textSize(10);
        text(txt, x + w / 2 - 5, y + 15);
    } else {
        fill(255, 0, 0);
        textSize(10);
        text(txt, x + w / 2 - 5, y + 14);
    }
};
var windowCalculator = function(x, y, w, h, txt) {
    windowText = txt; // Name
    // The window
    strokeWeight(1);
    stroke(0);
    fill(255);
    rect(x, y, w, h);
    noStroke();
    fill(200);
    rect(x + 2, y + 2, w - 2, h - 2);
    fill(0, 0, 150);
    rect(x + 5, y + 5, w - 10, 17.5);
    inBlock(x + 7.5, y + 45, w - 17.5, 20);
    fill(255);
    rect(x + 9, y + 46, w - 19, 18);
    inBlock(x + 7.5, y + 70, 30, 20);
    blockClick(x + 55, y + 70, 50, 20);
    textBlock(x + 110, y + 70, 50, 20, "\tCE");
    textBlock(x + 165, y + 70, 50, 20, "\tC");
    fill(255, 0, 0);
    calculatorBlock(x + 7.5, y + 95, 30, 20, "MC");
    calculatorButton(x + 55, y + 95, 30, 20, 7);
    calculatorButton(x + 88, y + 95, 30, 20, 8);
    calculatorButton(x + 121, y + 95, 30, 20, 9);
    calculatorBlock(x + 154, y + 95, 30, 20, "/");
    textBlock(x + 187, y + 95, 40, 20, "Cat");
    calculatorBlock(x + 7.5, y + 118, 30, 20, "MR");
    calculatorButton(x + 55, y + 118, 30, 20, 4);
    calculatorButton(x + 88, y + 118, 30, 20, 5);
    calculatorButton(x + 121, y + 118, 30, 20, 6);
    textBlock(x + 154, y + 118, 30, 20, "*");
    textBlock(x + 187, y + 118, 40, 20, "\t%");
    calculatorBlock(x + 7.5, y + 141, 30, 20, "MS");
    calculatorButton(x + 55, y + 141, 30, 20, 1);
    calculatorButton(x + 88, y + 141, 30, 20, 2);
    calculatorButton(x + 121, y + 141, 30, 20, 3);
    textBlock(x + 154, y + 141, 30, 20, "-");
    textBlock(x + 187, y + 141, 40, 20, "1/x");
    calculatorBlock(x + 7.5, y + 164, 30, 20, "M+");
    calculatorButton(x + 55, y + 164, 30, 20, 0);
    blockClick(x + 88, y + 164, 30, 20);
    textBlock(x + 121, y + 164, 30, 20, ".");
    textBlock(x + 154, y + 164, 30, 20, "+");
    textBlock(x + 187, y + 164, 40, 20, "\t=");
    // The calculator
    fill(0);
    textSize(10);
    text(currentNumber, x + 15, y + 58);
    // Window title
    fill(255);
    textSize(10);
    text(windowText, x + 50, y + 15);
    // The exit button
    blockClick(x + 7.5, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("x", x + 10, y + 15);
    if (mouseX > x + 7.5 && mouseX < x + 17.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        close = true;
    } else {
        close = false;
    }
    // The minimize button
    blockClick(x + 21, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    text("-", x + 23, y + 15);
    if (mouseX > x + 21 && mouseX < x + 31.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        minimize = true;
    } else {
        minimize = false;
    }
    // The window size button
    blockClick(x + 34, y + 7.5, 10, 10);
    fill(0);
    textSize(10);
    strokeWeight(1);
    stroke(0);
    fill(200);
    rect(x + 35, y + 9, 5, 5);
    rect(x + 37, y + 11, 5, 5);
    if (mouseX > x + 21 && mouseX < x + 31.5 && mouseY > y + 7.5 && mouseY < y + 17.5 && blockClicked === true) {
        windowSize = true;
    } else {
        windowSize = false;
    }
    saveBlock(x + 7.5, y + 25, 35, 17.5, "File"); // File button
    saveBlock(x + 47.5, y + 25, 35, 17.5, "Edit"); // Edit button
    saveBlock(x + 87.5, y + 25, 35, 17.5, "Help"); // Save Button
}; // Calculator ect.
var calculator = function(x, y) {
    if (mouseX > x && mouseX < x + 40 && mouseY > y && mouseY < y + 40 && mouseIsPressed) {
        fontColor = function() {
            if (lightColor === true) {
                dark();
            }
            if (darkColor === true) {
                light();
            }
        };
        noStroke();
        fill(0, 0, 255);
        rect(x, y, 40, 47.5);
        calculatorClicked = true;
    } else {
        fontColor = function() {
            if (darkColor === true) {
                dark();
            }
            if (lightColor === true) {
                light();
            }
        };
    }
    block(x + 5, y + 0, 30, 30);
    block(x + 8, y + 10, 7, 4);
    block(x + 17, y + 10, 7, 4);
    block(x + 26, y + 10, 7, 4);
    block(x + 8, y + 16, 7, 4);
    block(x + 17, y + 16, 7, 4);
    block(x + 26, y + 16, 7, 4);
    block(x + 8, y + 22, 7, 4);
    block(x + 17, y + 22, 7, 4);
    block(x + 26, y + 22, 7, 4);
    strokeWeight(1);
    stroke(0);
    fill(0, 0, 255);
    rect(x + 8, y + 3, 25, 4);
    fontColor();
    textSize(7.5);
    text("Clculatr", x + 1, y + 45);
    if (calculatorClicked === true) {
        windowCalculator(50, 30, 235, 200, "Calculator");
    }
    if (close === true && calculatorClicked === true) {
        calculatorClicked = false;
    }
    if (minimize === true && calculatorClicked === true) {
        calculatorClicked = false;
    }
}; // Calculator
var internet = function(x, y) {
    if (mouseX > x && mouseX < x + 40 && mouseY > y && mouseY < y + 40 && mouseIsPressed) {
        fontColor = function() {
            if (lightColor === true) {
                dark();
            }
            if (darkColor === true) {
                light();
            }
        };
        noStroke();
        fill(0, 0, 255);
        rect(x, y, 40, 47.5);
        internetClicked = true;
        words = "";
    } else {
        fontColor = function() {
            if (darkColor === true) {
                dark();
            }
            if (lightColor === true) {
                light();
            }
        };
    }
    pushMatrix();
    noStroke();
    textSize(43);
    fill(0, 217, 255);
    text("e", 18, 89);
    rotate(30);
    fill(255, 255, 0);
    rect(59, 36, 3, 30);
    resetMatrix();
    fill(255, 255, 255);
    textSize(11);
    text("Internet", x + 1, y + 45);
    if (internetClicked === true) {
        paperWidth = 230;
        paperHeight = 20;
        textAllow = true;
        window(50, 30, 300, 250, "Internet Explorer");
        blockClick(60, 60, 14, 15);
        blockClick(75, 60, 14, 15);
        stroke(200);
        fill(255);
        rect(90, 60, 250, 15);
        textSize(10);
        fill(0, 0, 0);
        text("<", 65, 71);
        text(">", 80, 71);
        fill(0);
        text(words, 92, 64, paperWidth, paperHeight);
        blinkingCursor(90, 65);
        if (words === "www.deletewinstonvirus.org" || words === "deletewinstonvirus.org") {
            textSize(15);
            text("End the Winston Virus", 70, 100);
            text("Info", 70, 139);
            textSize(10);
            text("Our goal is to make sure all Winston Viruses are GONE.", 70, 115);
            text("Please support us by donating your comment or share in the\nTips and Thanks Feed. Thank you.", 70, 158);

        }
    }
    if (close === true && internetClicked === true) {
        internetClicked = false;
    }
    if (minimize === true && internetClicked === true) {
        internetClicked = false;
    }
};
var System = {
    build: "Stable",

    user: {
        first: "Guest",
        last: "", //Yes..
        email: "noreply@gmail.com",
        isManaged: true,
        managedBy: "you",
        profileImg: getImage("space/plus"),
    },

    batteryLevel: 100,
    //Options
    shelf: {
        hide: true,
        scroll: 0,
        launcher: false, //Menu
        clock: false, //Menu
    },
};
var Window = [];
var shelf = [];
var createWindow = function(name, x, y, w, h) {
    Window.push({
        name: name,
        x: x,
        y: y,
        w: w,
        h: h,
    });
};
var mouseInArea = function(x, y, w, h, i) {

    if (i === undefined) {
        if (mouseX > x && mouseY > y && mouseX < x + w && mouseY < y + h) {
            return true;
        } else {
            return false;
        }
    } else {
        var b = Window;
        var mouseWX = mouseX - b[i].x;
        var mouseWY = mouseY - (b[i].y + 20);
        if (mouseWX > x && mouseWY > y && mouseWX < x + w && mouseWY < y + h) {
            return true;
        } else {
            return false;
        }
    }

};
var overButton = false;
var button = function(x, y, w, h, strk, clr) {
    if (clr === undefined) {
        clr = color(150, 150, 150, 50);
    }
    noStroke();
    strokeWeight(1);
    if (mouseInArea(x, y, w, h)) {
        overButton = true;
        fill(clr);
        if (strk) {
            stroke(0, 0, 0, 50);
        }
    } else {
        overButton = false;
        noFill();
    }

    rect(x, y, w, h);
    noStroke();
};
var hour1 = function() {
    //Work In Progress.. Working Weird.
    if (hour() === 0) {
        return 12;
    }
    if (hour() > 12) {
        return hour() - 12;
    } else {
        return hour();
    }
}; //WIP
var min1 = function() {
    if (minute() < 10) {
        return "0" + minute();
    } else {
        return minute();
    }
};
var sec1 = function() {
    if (second() < 10) {
        return "0" + second();
    } else {
        return second();
    }
};
var hoverText = function(txt, x, y) {
    textAlign(CENTER, CENTER);
    rectMode(CENTER);
    noStroke();
    fill(0, 0, 0, 100);
    var tSize = 13;
    var sz = tSize + 20;
    rect(x + 1, (y - 19), textWidth(txt) + sz, 20 * txt.length);
    rect(x - 1, y - 21, textWidth(txt) + sz, 20 * txt.length);
    fill(255);
    rect(x, y - 20, textWidth(txt) + sz, 20 * txt.length);
    stroke(0, 0, 0, 100);
    fill(0);
    textFont(createFont("Tahoma"), tSize);
    for (var i in txt) {
        text(txt[i], x, i * 15 + y - 18 - (txt.length * 2));
    }
    rectMode(LEFT);
    noStroke();
};
var createIcon = function(x, y, txt, icn) {
    //textAlign(CENTER, CENTER);
};
var windowContents = function(i) {
    pushMatrix();
    var b = Window;
    var mouseWX = mouseX - b[i].x;
    var mouseWY = mouseY - (b[i].y + 20);
    translate(b[i].x, b[i].y + 20);
    switch (b[i].name) {
        case "Settings":
            fill(0);
            textAlign(LEFT, LEFT);
            textSize(15);
            text("Settings", 20, 22);
            stroke(0);
            text("[+] You are in " + userMode + " mode right now.", 20, 50);
            break;
    }
    popMatrix();
};
var drawWindow = function(i) {
    var b = Window;
    fill(0, 0, 0, 50);
    rect(b[i].x - 2, b[i].y - 2, b[i].w, b[i].h);
    rect(b[i].x + 2, b[i].y + 2, b[i].w, b[i].h);

    fill(255);
    rect(b[i].x, b[i].y, b[i].w, b[i].h);
    fill(230);
    rect(b[i].x, b[i].y, b[i].w, 20);
    fill(20);
    textSize(14);
    text("X", b[i].x + b[i].w - 10, b[i].y + 11);
    button(b[i].x + b[i].w - 20, b[i].y, 20, 20);
    if (overButton && mouseIsClicked) {
        Window.splice(i, 1);
    }

    windowContents(i);
};
var updateWindow = function(i) {
    var b = Window;
};
var app = function(x, y, txt) {
    this.x = x;
    this.y = y;
    this.w = 40;
    this.h = 50;
    this.activate = false;
    this.num = 0;
    this.makeWindow = false;
    this.type = txt;
};
app.prototype.draw = function() {
    if (mouseX > this.x && mouseX < this.x + this.w && mouseY > this.y && mouseY < this.y + this.h && mouseIsPressed && this.activate === false) {
        this.activate = true;
        this.makeWindow = true;
    }
    if (this.makeWindow === true) {
        this.window = createWindow("New app", 50, 50, 300, 200);
        this.makeWindow = false;
    }
    switch (this.activate) {
        case true:
            noStroke();
            fill(0, 0, 255);
            rect(this.x, this.y, this.w, this.h);
    }
    stroke(200);
    fill(255);
    textSize(10);
    text("New app", this.x + 1, this.y + 50);
    beginShape();
    vertex(this.x + 10, this.y + 5);
    vertex(this.x + 25, this.y + 5);
    vertex(this.x + 30, this.y + 10);
    vertex(this.x + 30, this.y + 35);
    vertex(this.x + 10, this.y + 35);
    endShape(CLOSE);
    triangle(this.x + 25, this.y + 5, this.x + 30, this.y + 10, this.x + 25, this.y + 10);
    stroke(0);
    line(this.x + 15, this.y + 10, this.x + 20, this.y + 10);
    line(this.x + 15, this.y + 15, this.x + 25, this.y + 15);
    line(this.x + 15, this.y + 20, this.x + 25, this.y + 20);
    if (this.activate === true) {
        //drawWindow(this.window);
    }
};
var platformer = new app(10, 0, "Text");
var draw = function() {
    if (gameState === "Menu") {
        textFont(createFont("Comic Sans MS"));
        background(138, 181, 184);
        textSize(60);

        fill(255, 255, 255);
        text("Chrome OS", 201, 52);

        fill(255, 255, 255);
        textSize(25);
        text("Created by Indie", 201, 360);
        drawButton("Open", 127, 148, 150, 5, 50);
        if (overButton && mouseIsPressed) {
            gameState = "Play";
        }
        drawButton("Help", 127, 231, 150, 5, 50);
        if (overButton && mouseIsPressed) {
            gameState = "Help";
        }
    }

    if (gameState === "Play") {
        background(255, 0, 0);
        textAlign(LEFT);
        rectMode(UP);
        cursor();
        background(230);
        image(getImage("landscapes/beach-sunset"), 0, 0, 400, 400);
        textFont(createFont("Tahoma"));
        internet(10, 60);

        textFont(createFont("Tahoma"));
        platformer.draw();
        noStroke();
        var y = System.shelf.scroll + 370;
        pushMatrix();
        if (mouseInArea(3, System.shelf.scroll + 373, 25, 25) && !System.shelf.launcher) {
            hoverText(["Launcher"], 40, System.shelf.scroll + 373); //Test
        }
        if (System.shelf.hide) {
            fill(0, 0, 0);
        } else {
            fill(0);
        }
        rect(0, y, 400, 30);
        if (System.shelf.hide) {
            fill(0, 0, 0, 100);
        }
        if (mouseInArea(3, System.shelf.scroll + 373, 25, 25) && mouseIsClicked) {
            System.shelf.launcher ^= true;
        } else if (!mouseInArea(3, System.shelf.scroll + 373, 25, 25) && mouseIsClicked) {
            System.shelf.launcher = false;
        }
        if (System.shelf.launcher) {
            fill(41, 119, 255);
        }


        //Search button
        rect(3, y + 3, 25, 25, 5);
        stroke(255);
        strokeWeight(2);
        noFill();
        ellipse(13, y + 13, 10, 10);
        line(17, y + 16, 21, y + 20);
        strokeWeight(1);


        if (mouseInArea(290, y + 5, 105, 20)) {
            hoverText(["Settings"], 360, System.shelf.scroll + 373); //Test
        }
        textAlign(CENTER, CENTER);
        noStroke();
        fill(0, 0, 0, 100);
        //Clock/WiFi/Battery/Profile Pic
        if (mouseInArea(290, y + 5, 105, 20) && mouseIsClicked) {
            System.shelf.clock ^= true;
        }
        if (!mouseInArea(250, y - 170, 150, 220) && mouseIsClicked) {
            System.shelf.clock = false;
        }
        rect(290, y + 5, 105, 20, 3);
        if (System.shelf.clock) {
            //GUI
            fill(41, 119, 255);
            rect(290, y + 5, 85, 20, 3);
            noStroke();
            fill(0, 0, 0, 30);
            rect(246, y - 174, 154, 174);
            fill(255);
            strokeWeight(1);
            strokeJoin(ROUND);
            stroke(150);
            rect(250, y - 170, 150, 170); //Main Box
            fill(220);
            rect(250, y - 30, 150, 30); //Main Box
            strokeWeight(1);
            line(255, y - 138, 395, y - 138);
            textAlign(LEFT, LEFT);
            fill(0, 0, 0, 100);
            noStroke();
            rect(255, y - 165, 23, 23);
            image(System.user.profileImg, 257, y - 163, 19, 19);
            fill(0);
            textFont(createFont("Tahoma"), 12);
            //User First/Last Text
            text(System.user.first + " " + System.user.last, 280, y - 155);
            button(253, y - 168, 145, 28, true);

            fill(0);
            textSize(10);
            text(System.user.email, 280, y - 144);
            //Below User Stuff

            if (System.user.isManaged) {
                text("This account is managed by\n" + System.user.managedBy + ".", 256, y - 127);
            } else {

            }
            button(253, y - 135, 145, 24);
            stroke(150);
            strokeWeight(1);
            line(255, y - 110, 395, y - 110);
            noStroke();
            button(253, y - 27, 145, 24, false);


            textFont(createFont("Roboto"), 9);
            fill(0);
            textAlign(LEFT, LEFT);
            //Date
            textAlign(RIGHT, RIGHT);
            fill(110);
            text(round(System.batteryLevel) + "%", 395 - textWidth("Left"), y - 40);
            fill(0);
            text("Left", 398, y - 40);

            textAlign(LEFT, LEFT);
            text("Settings", 278, y - 40);
            fill(150);
            noFill();
            stroke(0);
            ellipse(264, y - 44, 15, 15);
            button(252, y - 56, 147, 25);
            if (overButton && mouseIsClicked) {
                createWindow("Settings", 20, 20, 360, 360);
                System.shelf.clock = false;
            }

        }
        noStroke();
        textAlign(CENTER, CENTER);
        fill(0, 0, 0, 100);
        //Profile Pic
        rect(375, y + 5, 20, 20, 3);
        noStroke();
        image(System.user.profileImg, 377, y + 7, 16, 16);
        //Clock
        fill(255);
        textSize(15);
        text(hour1() + ":" + min1(), 310, y + 14.5);

        //WiFi Icon
        fill(255, 255, 255);
        arc(340, y + 22, 28, 28, -130, -50);
        fill(230);
        noStroke();
        //Battery
        fill(120);
        rect(360, y + 11, 9, 11);
        rect(362, y + 11, 5, 2); //Tip
        fill(240);
        if (System.batteryLevel > 95) {
            rect(362, y + 9, 5, 2); //Tip
        }
        if (System.batteryLevel < 95) {
            rect(360, y + 22, 9, -(System.batteryLevel / 9));
        } else {
            rect(360, y + 22, 9, -11);
        }
        popMatrix();
        System.batteryLevel -= 0.001;

        {
            if (keyIsPressed) {
                kT++;
            } else {
                kT = 0;
            }
            if (mouseIsPressed) {
                mT++;
            } else {
                mT = 0;
            }
            if (mT === 1) {
                mouseIsClicked = true;
            } else {
                mouseIsClicked = false;
            }
            if (kT === 1) {
                keyIsClicked = true;
            } else {
                keyIsClicked = false;
            }
        } //Clicked Stuff


        try {
            for (var i in Window) {
                drawWindow(i);
                updateWindow(i);
            }
        } catch (e) {

        }


        if (platformer.activate === true) {
            //programs[0].draw(50, 70, 300, 180);
            textAllow = true;
            textAlign(LEFT);
            textSize(11);
            text(words, 62.5, 77.5, 270, 175);
            blinkingCursor(60, 80);
        }
        if (Window.length < 1) {
            platformer.activate = false;
        }

        text(">", mouseX + 1, mouseY + 1);
        strokeWeight(3);
        stroke(255, 255, 255);
        line(pmouseX, pmouseY, mouseX, mouseY);
    }

    if (gameState === "Help") {
        background(0, 85, 150);
        fill(0, 255, 162);

        textSize(60);
        text("Help", 200, 50);

        fill(255, 255, 255);
        textSize(18);
        text("Chrome OS", 201, 200);

        drawButton("Back", 10, 350, 120, 5, 40);
        if (overButton && mouseIsPressed) {
            gameState = "Menu";
        }
    }
};
